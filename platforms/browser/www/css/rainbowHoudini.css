:root {
  --angle: 45deg;
  --opacity: 1;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

.border_animated {
  --border-size: 0.3rem;
  border-radius: 25px !important;
  border: var(--border-size) dotted transparent;
  background-image: linear-gradient(to right,
      rgb(255 255 255 / var(--opacity)),
      rgb(255 255 255 / var(--opacity))),
    conic-gradient(from var(--angle),
      var(--cor_Rainbow_1) 0deg 90deg,
      var(--cor_Rainbow_2) 90deg 180deg,
      var(--cor_Rainbow_3) 180deg 270deg,
      var(--cor_Rainbow_4) 270deg 360deg);
  background-origin: border-box;
  background-clip: padding-box, border-box;
}
/*
.rainbow {
  --border-size: 0.3rem;
  border-radius: 25px !important;
  border: var(--border-size) dotted transparent;
  background-image: linear-gradient(to right,
      rgb(255 255 255 / var(--opacity)),
      rgb(255 255 255 / var(--opacity))),
    conic-gradient(from var(--angle),
      #d53e33 0deg 90deg,
      #fbb300 90deg 180deg,
      #377af5 180deg 270deg,
      #399953 270deg 360deg);
  background-origin: border-box;
  background-clip: padding-box, border-box;
}
*/
/* Animate when Houdini is available */
@supports (background: paint(houdini)) {
  @property --opacity {
    syntax: "<number>";
    initial-value: 0.5;
    inherits: false;
  }

  @property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }

  @keyframes opacityChange {
    to {
      --opacity: 98;
    }
  }

  @keyframes rotate {
    to {
      --angle: 360deg;
    }
  }

  .rainbow {
    animation: rotate 4s linear infinite, opacityChange 3s infinite alternate;
  }

  .border_animated {
    animation: rotate 9s linear infinite, opacityChange 3s infinite alternate;
    -webkit-animation: rotate 9s linear infinite, opacityChange 3s infinite alternate;
  }
}